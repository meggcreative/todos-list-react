{"version":3,"sources":["Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/index.js","Container/styled.js","Container/index.js","App.js","useTasks.js","reportWebVitals.js","index.js","theme.js"],"names":["StyledForm","styled","form","theme","breakpoint","mobile","StyledInput","input","color","alto","Button","button","Form","addNewTask","useState","newTaskContent","setNewTaskContent","inputRef","useRef","className","onSubmit","event","preventDefault","trim","current","focus","ref","value","placeholder","required","onChange","target","id","List","ul","white","Item","li","silver","hidden","css","Content","span","done","toggleDone","remove","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","onClick","content","StyledContainer","div","StyledButton","disabled","Buttons","toggleHideDone","setAllDone","length","every","StyledSection","section","StyledHeader","header","StyledTittle","h2","StyledSectionContent","Section","title","body","extraHeaderContent","Header","StyledMain","main","Container","props","children","App","setHideDone","localStorageTasks","localStorage","getItem","JSON","parse","setTasks","useEffect","setItem","stringify","filter","useTasks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a916f30c.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\n    display: grid;\n    grid-template-columns: 1fr auto;\n    grid-gap: 20px;\n\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\n        grid-template-columns: 1fr;\n    }\n`\nexport const StyledInput = styled.input`\n    padding: 10px;\n    border: 1px solid ${({ theme }) => theme.color.alto};\n`\nexport const Button = styled.button`\n    padding: 10px;\n    background: hsl(180, 100%, 25%);\n    color: white;\n    border: none;\n    transition: 0.5s;\n\n    &:hover {\n        transform: scale(1.2);\n        background-color: rgb(45, 150, 150);\n    }\n    \n    &:active {\n        background: hsl(180, 100%, 35%)\n    }\n`","import React, { useState, useRef } from 'react';\nimport { StyledForm, StyledInput, Button } from \"./styled.js\";\n\nconst Form = ({ addNewTask }) => {\n\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\n    const inputRef = useRef(null);\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n        if (newTaskContent.trim() === \"\") {\n            return;\n        }\n\n        addNewTask(newTaskContent.trim());\n        setNewTaskContent(\"\");\n        inputRef.current.focus();\n    };\n\n    return (\n        <StyledForm\n            className=\"form\"\n            onSubmit={onFormSubmit}\n        >\n            <StyledInput\n                ref={inputRef}\n                value={newTaskContent}\n                placeholder=\"Co jest do zrobienia?\"\n                required\n                onChange={({ target }) => setNewTaskContent(target.value)}\n            />\n            <Button id=\"myTestButton\">Dodaj zadanie </Button>\n        </StyledForm>\n    )\n\n}\n\n\n\nexport default Form;","import styled, { css } from \"styled-components\";\n\nexport const List = styled.ul`\n    padding: 10px;\n    margin: 2px 0;\n    background-color: ${({ theme }) => theme.color.white};\n    max-width: auto;\n`;\n\nexport const Item = styled.li`\n    display: grid;\n    grid-template-columns: 35px 1fr 35px;\n    justify-content: center;\n    align-items: center;\n    border-bottom: 1px solid ${({ theme }) => theme.color.silver};\n    margin-bottom: 10px;\n    padding: 10px 10px 10px 10px;\n\n    ${({ hidden }) => hidden && css`\n        display:none;\n    `}\n`;\n\nexport const Content = styled.span`\n    justify-content: center;\n    overflow-wrap: anywhere;\n    margin: 10px;\n\n    ${({ done }) => done && css`\n        text-decoration: line-through;\n    `}\n`;\n\nexport const Button = styled.button`\n    margin: 10px 0;\n    padding: 5px;\n    font-size: 25px;\n    height: 38px;\n    border: none;\n    color: white;\n    transition: background 0.3s;\n    display: flex;\n    justify-content: center;\n\n    ${({ toggleDone }) => toggleDone && css`\n        transition: 1s;\n        background-color: green;\n        grid-column: 1;\n    \n\n        &:hover {\n            background-color: rgb(9, 145, 9);\n            transform: scale (1.5);\n        }\n    `}    \n\n    ${({ remove }) => remove && css`\n        transition: 1s;\n        background-color: red;\n        grid-column: 3;\n        justify-content: center;\n\n        &:hover {\n            background-color: rgb(172, 46, 46);\n            transform: scale (1.5);\n        }\n    `}\n\n`\n\n","import { List, Item, Content, Button } from \"./styled.js\"\n\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\n    <List>\n        {tasks.map(task => (\n            <Item\n                key={task.id}\n                hidden={task.done && hideDone}\n            >\n                <Button\n                    toggleDone\n                    onClick={() => toggleTaskDone(task.id)}\n                >\n                    {task.done ? \" âœ”  \" : \" \"}\n                </Button>\n                <Content done={task.done}>\n                    {task.content}\n                </Content>\n                <Button\n                    remove\n                    onClick={() => removeTask(task.id)}\n                >\n                    ğŸ—‘\n                </Button>\n            </Item>\n        ))}\n    </List>\n);\n\nexport default Tasks;","import styled, { css } from \"styled-components\";\n\nexport const StyledContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n`\n\nexport const StyledButton = styled.button`\n    border: none;\n    background-color: ${({ theme }) => theme.color.white};\n    color: teal;\n    padding: 10px;\n    transition: color 0.5s;\n    margin: 0 0 0 20px;\n\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\n        flex-basis: 100%;\n        margin: 10px;\n    }\n\n    ${({ disabled }) => disabled && css`\n        color: grey;\n    `}\n\n`","import { StyledContainer, StyledButton } from \"./styled.js\";\n\n\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => {\n    if (tasks.length === 0) {\n        return null\n    }\n    return (\n        <StyledContainer>\n            <StyledButton onClick={toggleHideDone}>\n                {hideDone ? \"Pokaz\" : \"Ukryj\"} ukoÅ„czone\n            </StyledButton>\n            <StyledButton\n                onClick={setAllDone}\n                disabled={tasks.every(({ done }) => done)}\n            >\n                UkoÅ„cz wszystkie\n            </StyledButton>\n        </StyledContainer>\n    )\n}\n\n\nexport default Buttons;","import styled from \"styled-components\";\n\nexport const StyledSection = styled.section`\n    margin: 10px 0;\n    background: white;\n    box-shadow: 0 0 5px ${({ theme }) => theme.color.alto};\n`;\n\nexport const StyledHeader = styled.header`\n    display: grid;\n    grid-template-columns: auto auto;\n    grid-gap: 20px;\n    justify-content: space-between;\n    align-items: center;\n    padding: 20px;\n    border-bottom: 1px solid ${({ theme }) => theme.color.alto};\n\n    @media (max-width:${({ theme }) => theme.breakpoint.mobile}px) {\n        grid-template-columns: 1fr;\n    }\n`\nexport const StyledTittle = styled.h2`\n    font-size: 20px;\n    margin: 0;\n`\n\nexport const StyledSectionContent = styled.div`\n    padding: 20px;\n`","import { StyledSection, StyledHeader, StyledTittle, StyledSectionContent } from \"./styled.js\";\n\n\nconst Section = ({ title, body, extraHeaderContent }) => (\n    <StyledSection>\n        <StyledHeader>\n            <StyledTittle> {title} </StyledTittle>\n            {extraHeaderContent}\n        </StyledHeader>\n        <StyledSectionContent>\n            {body}\n        </StyledSectionContent>\n    </StyledSection>\n\n);\n\nexport default Section;","\nconst Header = ({ title }) => (\n    <header>\n        <h1> {title}</h1>\n    </header>\n);\n\nexport default Header;","import styled from \"styled-components\";\n\nexport const StyledMain = styled.main`\n    background-color: ${({ theme }) => theme.color.silver};\n    margin: 0 auto;\n    padding: 20px;\n    max-width: 900px;\n`","import { StyledMain } from \"./styled.js\";\n\nconst Container = (props) => (\n    <StyledMain >\n        {props.children}\n    </StyledMain>\n);\n\nexport default Container;","import React, { useState } from 'react';\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\nimport { useTasks } from \"./useTasks\";\n\nfunction App() {\n\n    const [hideDone, setHideDone] = useState(false);\n\n    const toggleHideDone = () => {\n        setHideDone(hideDone => !hideDone);\n    };\n\n    const {\n        tasks,\n        removeTask,\n        toggleTaskDone,\n        setAllDone,\n        addNewTask,\n    } = useTasks();\n\n    return (\n        <Container>\n            <Header title=\"Lista zadaÅ„\" />\n\n            <Section\n                title=\"Dodaj nowe zadanie\"\n                body={<Form addNewTask={addNewTask} />}\n            />\n            < Section\n                title=\"Lista zadaÅ„\"\n                extraHeaderContent={\n                    <Buttons\n                        tasks={tasks}\n                        hideDone={hideDone}\n                        toggleHideDone={toggleHideDone}\n                        setAllDone={setAllDone}\n                    />\n                }\n                body={\n                    <Tasks\n                        tasks={tasks}\n                        hideDone={hideDone}\n                        removeTask={removeTask}\n                        toggleTaskDone={toggleTaskDone}\n                    />\n                }\n            />\n\n        </Container>\n    );\n};\n\nexport default App;","import { useState, useEffect } from 'react';\n\nexport const useTasks = () => {\n    const localStorageTasks = localStorage.getItem(\"tasks\");\n\n    const [tasks, setTasks] = useState(\n        localStorageTasks ? JSON.parse(localStorageTasks) : []\n    );\n\n    useEffect(() => {\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }, [tasks]);\n\n    const removeTask = (id) => {\n        setTasks(tasks => tasks.filter(task => task.id !== id));\n    };\n\n    const toggleTaskDone = (id) => {\n        setTasks(tasks => tasks.map(task => {\n            if (task.id === id) {\n                return { ...task, done: !task.done };\n            }\n            return task;\n        }))\n    }\n\n    const setAllDone = () => {\n        setTasks(tasks => tasks.map(task => ({\n            ...task,\n            done: true,\n        })));\n    };\n\n    const addNewTask = (newTaskContent) => {\n        setTasks(tasks => [\n            ...tasks,\n            {\n                content: newTaskContent,\n                done: false,\n                id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1,\n            },\n        ]);\n    }\n    return {\n        tasks,\n        removeTask,\n        toggleTaskDone,\n        setAllDone,\n        addNewTask,\n    };\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from \"styled-components\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {theme} from \"./theme.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\n    color: {\n        white: \"#FFFFFF\",\n        silver: \"#eee\",\n        alto: \"#ddd\",\n    },\n    breakpoint: {\n        mobile: 767,\n    }\n\n};"],"sourceRoot":""}